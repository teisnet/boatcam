#1 Log camera communication along with both request and response times (consider one log per camera)
#2 Limit repeated requests to camera
    Case 1: issued move command to camera with no support for position queries
    Case 2: Camera is stuck (eg. zoom) 
#3 Ensure incoming camera request are in number formats
#4 General logging
#5 Discover and handle camera operations from external sources
#6 Dont query camera if no users are connected (camera sleep)
#8 Handle range error for Onvif and other port settings. Crashes server.
#9 Fix error at invalid onvif response: TypeError: Cannot read property 'panTilt' of undefined at ...\node_modules\onvif\lib\ptz.js:105:21
   Appears when onvif is set to a address/port that exists but is not ONVIF
#10 Warn if database is disconnected 
#13 Disable camera with missing or invalid hostname parameter. Proper client side error notification
#14 Disconnect client side video streaming when camera is disabled
#15 Delete camera instance when camera is deleted from database.
#16 Database validation script
#18 Duplicate existing camera feature
#21 Prevent camera movements when disabled
#22 Make logs avilable on admin pages. Individual logs for each camera.
#23 Ensure that camera slugs and berth numbers are not ObjectId's
#25 Authentication


SOLVED
#7 Create Camera 'disabled' field to turn off camera queries.
#11 Create new websocket handler for newly created cameras
    Fix ONVIF connectivity bug for newly created cameras (client side). Connectivity is only established after server restart.
#12 New cameras with empty 'slug' field becomes unreachable. Validate new cameras before creation, slug field nonempty, english characters.
#17 Fix new Camera "null" ports issue: "Could not update camera 56d210adf89cc1480ce783ac (Cast to number failed for value "null" at path "onvif")"
    Fixed: Jade non-escaped use of variables
#19 Form pages still submit to server when required fields are empty
#20 Prevent slashes in slugs and berth numbers, as they don't work in urls
